// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: config/clog/clog.proto

package clog

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 开发模式
type RunType int32

const (
	RunType_console RunType = 0 // 终端
	RunType_file    RunType = 1 // 文件
)

// Enum value maps for RunType.
var (
	RunType_name = map[int32]string{
		0: "console",
		1: "file",
	}
	RunType_value = map[string]int32{
		"console": 0,
		"file":    1,
	}
)

func (x RunType) Enum() *RunType {
	p := new(RunType)
	*p = x
	return p
}

func (x RunType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RunType) Descriptor() protoreflect.EnumDescriptor {
	return file_config_clog_clog_proto_enumTypes[0].Descriptor()
}

func (RunType) Type() protoreflect.EnumType {
	return &file_config_clog_clog_proto_enumTypes[0]
}

func (x RunType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RunType.Descriptor instead.
func (RunType) EnumDescriptor() ([]byte, []int) {
	return file_config_clog_clog_proto_rawDescGZIP(), []int{0}
}

// 日志级别
type LevelType int32

const (
	LevelType_debug LevelType = 0
	LevelType_info  LevelType = 1
	LevelType_warn  LevelType = 2
	LevelType_error LevelType = 3
)

// Enum value maps for LevelType.
var (
	LevelType_name = map[int32]string{
		0: "debug",
		1: "info",
		2: "warn",
		3: "error",
	}
	LevelType_value = map[string]int32{
		"debug": 0,
		"info":  1,
		"warn":  2,
		"error": 3,
	}
)

func (x LevelType) Enum() *LevelType {
	p := new(LevelType)
	*p = x
	return p
}

func (x LevelType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LevelType) Descriptor() protoreflect.EnumDescriptor {
	return file_config_clog_clog_proto_enumTypes[1].Descriptor()
}

func (LevelType) Type() protoreflect.EnumType {
	return &file_config_clog_clog_proto_enumTypes[1]
}

func (x LevelType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LevelType.Descriptor instead.
func (LevelType) EnumDescriptor() ([]byte, []int) {
	return file_config_clog_clog_proto_rawDescGZIP(), []int{1}
}

// 日志配置
type Log struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 日志模式 console file
	Run string `protobuf:"bytes,1,opt,name=run,proto3" json:"run,omitempty" mapstructure:"run" toml:"run" yaml:"run"` // @gotags: mapstructure:"run" toml:"run" yaml:"run"
	// 日志文件路径
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty" mapstructure:"path" toml:"path" yaml:"path"` // @gotags: mapstructure:"path" toml:"path" yaml:"path"
	// 日志级别 debug  info  error
	Level string `protobuf:"bytes,3,opt,name=level,proto3" json:"level,omitempty" mapstructure:"level" toml:"level" yaml:"level"` // @gotags: mapstructure:"level" toml:"level" yaml:"level"
	// 每个日志文件保存大小 *M
	MaxSize int32 `protobuf:"varint,4,opt,name=max_size,json=maxSize,proto3" json:"max_size,omitempty" mapstructure:"max_size" toml:"max_size" yaml:"max_size"` // @gotags: mapstructure:"max_size" toml:"max_size" yaml:"max_size"
	// 保留 N 个备份
	MaxBackups int32 `protobuf:"varint,5,opt,name=max_backups,json=maxBackups,proto3" json:"max_backups,omitempty" mapstructure:"max_backups" toml:"max_backups" yaml:"max_backups"` // @gotags: mapstructure:"max_backups" toml:"max_backups" yaml:"max_backups"
	// 保留 N 天
	MaxAge        int32 `protobuf:"varint,6,opt,name=max_age,json=maxAge,proto3" json:"max_age,omitempty" mapstructure:"max_age" toml:"max_age" yaml:"max_age"` // @gotags: mapstructure:"max_age" toml:"max_age" yaml:"max_age"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Log) Reset() {
	*x = Log{}
	mi := &file_config_clog_clog_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Log) ProtoMessage() {}

func (x *Log) ProtoReflect() protoreflect.Message {
	mi := &file_config_clog_clog_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Log.ProtoReflect.Descriptor instead.
func (*Log) Descriptor() ([]byte, []int) {
	return file_config_clog_clog_proto_rawDescGZIP(), []int{0}
}

func (x *Log) GetRun() string {
	if x != nil {
		return x.Run
	}
	return ""
}

func (x *Log) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Log) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *Log) GetMaxSize() int32 {
	if x != nil {
		return x.MaxSize
	}
	return 0
}

func (x *Log) GetMaxBackups() int32 {
	if x != nil {
		return x.MaxBackups
	}
	return 0
}

func (x *Log) GetMaxAge() int32 {
	if x != nil {
		return x.MaxAge
	}
	return 0
}

var File_config_clog_clog_proto protoreflect.FileDescriptor

const file_config_clog_clog_proto_rawDesc = "" +
	"\n" +
	"\x16config/clog/clog.proto\x12\x04clog\"\x96\x01\n" +
	"\x03Log\x12\x10\n" +
	"\x03run\x18\x01 \x01(\tR\x03run\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12\x14\n" +
	"\x05level\x18\x03 \x01(\tR\x05level\x12\x19\n" +
	"\bmax_size\x18\x04 \x01(\x05R\amaxSize\x12\x1f\n" +
	"\vmax_backups\x18\x05 \x01(\x05R\n" +
	"maxBackups\x12\x17\n" +
	"\amax_age\x18\x06 \x01(\x05R\x06maxAge* \n" +
	"\aRunType\x12\v\n" +
	"\aconsole\x10\x00\x12\b\n" +
	"\x04file\x10\x01*5\n" +
	"\tLevelType\x12\t\n" +
	"\x05debug\x10\x00\x12\b\n" +
	"\x04info\x10\x01\x12\b\n" +
	"\x04warn\x10\x02\x12\t\n" +
	"\x05error\x10\x03B7Z5github.com/laixhe/gonet/protocol/gen/config/clog;clogb\x06proto3"

var (
	file_config_clog_clog_proto_rawDescOnce sync.Once
	file_config_clog_clog_proto_rawDescData []byte
)

func file_config_clog_clog_proto_rawDescGZIP() []byte {
	file_config_clog_clog_proto_rawDescOnce.Do(func() {
		file_config_clog_clog_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_config_clog_clog_proto_rawDesc), len(file_config_clog_clog_proto_rawDesc)))
	})
	return file_config_clog_clog_proto_rawDescData
}

var file_config_clog_clog_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_config_clog_clog_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_config_clog_clog_proto_goTypes = []any{
	(RunType)(0),   // 0: clog.RunType
	(LevelType)(0), // 1: clog.LevelType
	(*Log)(nil),    // 2: clog.Log
}
var file_config_clog_clog_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_config_clog_clog_proto_init() }
func file_config_clog_clog_proto_init() {
	if File_config_clog_clog_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_config_clog_clog_proto_rawDesc), len(file_config_clog_clog_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_config_clog_clog_proto_goTypes,
		DependencyIndexes: file_config_clog_clog_proto_depIdxs,
		EnumInfos:         file_config_clog_clog_proto_enumTypes,
		MessageInfos:      file_config_clog_clog_proto_msgTypes,
	}.Build()
	File_config_clog_clog_proto = out.File
	file_config_clog_clog_proto_goTypes = nil
	file_config_clog_clog_proto_depIdxs = nil
}
